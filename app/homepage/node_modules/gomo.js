const querystring = require('querystring');
const data = querystring.parse( process.argv[2] || '', '+' )
var adyenVersion = 25
var adyenKey = "10001|BFB415760B1898E5860BC0B213CA7DA112D46D11262B93ABF5E609C2476ABB059FE44397176E47DC1341B86C67499EBEB755B54FBAECBBDE3D17ED210CC0E9D2A6DAB64C10791CF859008598A7A831128ACD4BC801230434894BF2510B9FCD1736C485A84F8357E5EF79ED16676DBDF1EE7AB10CE3947967936F7F5C202C848D900F12772CD80E597D60E38AE645F7AB72CB0E1B06B2C8E4E404EBB04200780CF3C2A0D8188C34099E17474DF465749BD4EF92099EC5EF0F23E85CD8E6B75704E6B881F8AF7752E93E84A519138FB3CDAE4EF6C176E4A2B2D6E5EDA100814F282FADC49327218BCDB6DDAF9FA271A1C770499538D35535CD2DB0AD8C9915A677"

const adyenEncrypt = require('node-adyen-encrypt')(adyenVersion)
var options = {};
const cardData = {
    number : data.cc,
    holderName : data.fname+ " " +data.lname,
    expiryMonth : data.mm,
    expiryYear : data.yy,
    generationtime : new Date().toISOString()
};

var cseInstance = adyenEncrypt.createEncryption(adyenKey, options)
cseInstance.validate(cardData);
var encryptCardData = cseInstance.encrypt(cardData)
var ecc = cseInstance.encrypt(cardData);
var emm = cseInstance.encrypt(cardData);
var eyy = cseInstance.encrypt(cardData);
var ecvc = cseInstance.encrypt(cardData);
var ebin = cseInstance.encrypt(cardData);

var encrypted = '{"encryptedCardData":"' + encryptCardData + '","encryptedBinData":"' + ebin + '","encryptedCardNumber":"' + ecc + '","encryptedExpiryMonth":"' + emm + '","encryptedExpiryYear":"' + eyy + '","encryptedSecurityCode":"' + ecvc + '","holderName":"'+ cardData.holderName +'"}'

console.log(encrypted);