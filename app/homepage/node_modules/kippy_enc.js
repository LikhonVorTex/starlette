const querystring = require('querystring');
const data = querystring.parse( process.argv[2] || '', '+' )
var adyenVersion = 25
var adyenKey = "10001|BCD0DE77C823C017CC44345AB8B4DC656C2E9D50C27C2EAE97CDD4E3076247556DB38EFD9F0427514F2FD2D67A85767CF679977ED063967CD2CDAE9589031B163E5273FB0E98AE8018D7136E14104FB689E9E5E4C97FE5E028099ACA302D5E75A5C066556A997F2A53FDB652FF15613F301713F96AEAAEB758F5036F7E3CDC58F1CCB0F09C94C607E3ED31EF3A546FCBAAB8C4212FF86989012187783AA3FB1C973DBBE36C0DB9EDAED172F663EACABEEF46B8A7EAEAAE10BDE6F927395E3538BC9E1187E1920EBB9F02B4F53913224C2751BCF1C4294150FD8549FD0A0C9369E9312B81F967E6165C3BB384E165DEBEE12839CA82F8826C5F6D9CC22684389F"

const adyenEncrypt = require('node-adyen-encrypt')(adyenVersion)
var options = {};
const cardData = {
    number : data.cc,
    holderName : data.fname+ " " +data.lname,
    expiryMonth : data.mm,
    expiryYear : data.yy,
    expiryYear : data.yy,
    cvc: data.cvv,
    generationtime : new Date().toISOString()
};

var cseInstance = adyenEncrypt.createEncryption(adyenKey, options)
cseInstance.validate(cardData);
var encryptCardData = cseInstance.encrypt(cardData)
var ecc = cseInstance.encrypt(cardData);
var emm = cseInstance.encrypt(cardData);
var eyy = cseInstance.encrypt(cardData);
var ecvc = cseInstance.encrypt(cardData);
var ebin = cseInstance.encrypt(cardData);

var encrypted = '{"encryptedCardData":"' + encryptCardData + '","encryptedBinData":"' + ebin + '","encryptedCardNumber":"' + ecc + '","encryptedExpiryMonth":"' + emm + '","encryptedExpiryYear":"' + eyy + '","encryptedSecurityCode":"' + ecvc + '","holderName":"'+ cardData.holderName +'"}'

console.log(encrypted);